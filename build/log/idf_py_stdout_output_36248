[1/16] Performing build step for 'bootloader'
[1/1] cd /home/suchy/OBC/OBC_Recovery/build/bootloader/esp-idf/esptool_py && /home/suchy/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/suchy/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/suchy/OBC/OBC_Recovery/build/bootloader/bootloader.bin
Bootloader binary size 0x6820 bytes. 0x7e0 bytes (7%) free.
[2/14] Building C object esp-idf/recovery_control/CMakeFiles/__idf_recovery_control.dir/recovery_control.c.obj
[3/14] Building C object esp-idf/cots/CMakeFiles/__idf_cots.dir/cots.c.obj
/home/suchy/OBC/OBC_Recovery/components/cots/cots.c: In function 'cots_init':
/home/suchy/OBC/OBC_Recovery/components/cots/cots.c:32:23: warning: unused variable 'apogee_input' [-Wunused-variable]
   32 |         gpio_config_t apogee_input = {
      |                       ^~~~~~~~~~~~
/home/suchy/OBC/OBC_Recovery/components/cots/cots.c:24:23: warning: unused variable 'igniter_cont_input' [-Wunused-variable]
   24 |         gpio_config_t igniter_cont_input = {
      |                       ^~~~~~~~~~~~~~~~~~
[4/14] Building C object esp-idf/i2c/CMakeFiles/__idf_i2c.dir/i2c.c.obj
/home/suchy/OBC/OBC_Recovery/components/i2c/i2c.c: In function 'I2C_buffer_read':
/home/suchy/OBC/OBC_Recovery/components/i2c/i2c.c:40:43: warning: passing argument 2 of 'i2c_slave_read_buffer' from incompatible pointer type [-Wincompatible-pointer-types]
   40 |     i2c_slave_read_buffer(I2C_SLAVE_PORT, rx_buffer, DATA_SIZE_FROM_MCB,100 / portTICK_PERIOD_MS);
      |                                           ^~~~~~~~~
      |                                           |
      |                                           uint32_t * {aka long unsigned int *}
In file included from /home/suchy/OBC/OBC_Recovery/components/i2c/i2c.h:4,
                 from /home/suchy/OBC/OBC_Recovery/components/i2c/i2c.c:1:
/home/suchy/esp/esp-idf/components/driver/i2c/include/driver/i2c.h:451:56: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint32_t *' {aka 'long unsigned int *'}
  451 | int i2c_slave_read_buffer(i2c_port_t i2c_num, uint8_t *data, size_t max_size, TickType_t ticks_to_wait);
      |                                               ~~~~~~~~~^~~~
[5/14] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[6/14] Linking C static library esp-idf/recovery_control/librecovery_control.a
[7/14] Linking C static library esp-idf/cots/libcots.a
[8/14] Linking C static library esp-idf/i2c/libi2c.a
[9/14] Linking C static library esp-idf/main/libmain.a
[10/14] Generating ld/sections.ld
[11/14] Linking CXX executable main.elf
[12/14] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/suchy/OBC/OBC_Recovery/build/main.bin
[13/14] cd /home/suchy/OBC/OBC_Recovery/build/esp-idf/esptool_py && /home/suchy/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/suchy/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/suchy/OBC/OBC_Recovery/build/partition_table/partition-table.bin /home/suchy/OBC/OBC_Recovery/build/main.bin
main.bin binary size 0x31650 bytes. Smallest app partition is 0x100000 bytes. 0xce9b0 bytes (81%) free.
[13/14] cd /home/suchy/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/suchy/esp/esp-idf -D "SERIAL_TOOL=/home/suchy/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/home/suchy/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/suchy/OBC/OBC_Recovery/build -P /home/suchy/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-PICO-D4 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, Embedded Flash, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: d4:d4:da:b6:ef:04
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00041fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26656 bytes to 16705...
Writing at 0x00001000... (50 %)
Writing at 0x0000768b... (100 %)
Wrote 26656 bytes (16705 compressed) at 0x00001000 in 0.7 seconds (effective 285.3 kbit/s)...
Hash of data verified.
Compressed 202320 bytes to 111468...
Writing at 0x00010000... (14 %)
Writing at 0x0001d36e... (28 %)
Writing at 0x00022e9d... (42 %)
Writing at 0x00028eba... (57 %)
Writing at 0x0002f2d0... (71 %)
Writing at 0x00036eaf... (85 %)
Writing at 0x0003c98d... (100 %)
Wrote 202320 bytes (111468 compressed) at 0x00010000 in 2.7 seconds (effective 605.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 477.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
