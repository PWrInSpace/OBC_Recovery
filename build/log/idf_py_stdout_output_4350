[1/15] Performing build step for 'bootloader'
[1/1] cd /home/suchy/OBC/OBC_Recovery/build/bootloader/esp-idf/esptool_py && /home/suchy/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/suchy/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/suchy/OBC/OBC_Recovery/build/bootloader/bootloader.bin
Bootloader binary size 0x6820 bytes. 0x7e0 bytes (7%) free.
[2/13] Building C object esp-idf/cots/CMakeFiles/__idf_cots.dir/cots.c.obj
/home/suchy/OBC/OBC_Recovery/components/cots/cots.c: In function 'cots_init':
/home/suchy/OBC/OBC_Recovery/components/cots/cots.c:32:23: warning: unused variable 'apogee_input' [-Wunused-variable]
   32 |         gpio_config_t apogee_input = {
      |                       ^~~~~~~~~~~~
/home/suchy/OBC/OBC_Recovery/components/cots/cots.c:24:23: warning: unused variable 'igniter_cont_input' [-Wunused-variable]
   24 |         gpio_config_t igniter_cont_input = {
      |                       ^~~~~~~~~~~~~~~~~~
/home/suchy/OBC/OBC_Recovery/components/cots/cots.c:16:23: warning: unused variable 'arming_output' [-Wunused-variable]
   16 |         gpio_config_t arming_output = {
      |                       ^~~~~~~~~~~~~
[3/13] Building C object esp-idf/recovery_control/CMakeFiles/__idf_recovery_control.dir/recovery_control.c.obj
[4/13] Building C object esp-idf/i2c/CMakeFiles/__idf_i2c.dir/i2c.c.obj
/home/suchy/OBC/OBC_Recovery/components/i2c/i2c.c: In function 'I2C_buffer_read':
/home/suchy/OBC/OBC_Recovery/components/i2c/i2c.c:40:43: warning: passing argument 2 of 'i2c_slave_read_buffer' from incompatible pointer type [-Wincompatible-pointer-types]
   40 |     i2c_slave_read_buffer(I2C_SLAVE_PORT, rx_buffer, DATA_SIZE_FROM_MCB,100 / portTICK_PERIOD_MS);
      |                                           ^~~~~~~~~
      |                                           |
      |                                           uint32_t * {aka long unsigned int *}
In file included from /home/suchy/OBC/OBC_Recovery/components/i2c/i2c.h:4,
                 from /home/suchy/OBC/OBC_Recovery/components/i2c/i2c.c:1:
/home/suchy/esp/esp-idf/components/driver/i2c/include/driver/i2c.h:451:56: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint32_t *' {aka 'long unsigned int *'}
  451 | int i2c_slave_read_buffer(i2c_port_t i2c_num, uint8_t *data, size_t max_size, TickType_t ticks_to_wait);
      |                                               ~~~~~~~~~^~~~
[5/13] Linking C static library esp-idf/recovery_control/librecovery_control.a
[6/13] Linking C static library esp-idf/cots/libcots.a
[7/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[8/13] Linking C static library esp-idf/i2c/libi2c.a
[9/13] Linking C static library esp-idf/main/libmain.a
[10/13] Generating ld/sections.ld
[11/13] Linking CXX executable main.elf
[12/13] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/suchy/OBC/OBC_Recovery/build/main.bin
[13/13] cd /home/suchy/OBC/OBC_Recovery/build/esp-idf/esptool_py && /home/suchy/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/suchy/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/suchy/OBC/OBC_Recovery/build/partition_table/partition-table.bin /home/suchy/OBC/OBC_Recovery/build/main.bin
main.bin binary size 0x30b50 bytes. Smallest app partition is 0x100000 bytes. 0xcf4b0 bytes (81%) free.
